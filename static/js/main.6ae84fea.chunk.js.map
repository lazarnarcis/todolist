{"version":3,"sources":["ItemToDo.js","App.js","index.js"],"names":["ItemToDo","keyi","item","removeElement","useState","display","setDisplay","priorityID","id","className","style","backgroundColor","type","value","onClick","document","getElementById","querySelector","transform","transition","setTimeout","App","currentMap","setMap","inputRef","useRef","items","setItems","initialItemID","length","addElement","current","alert","newObj","text","push","console","log","updateMap","map","key","placeholder","ref","onKeyDown","e","autoFocus","ReactDOM","render"],"mappings":"kKAEe,SAASA,EAAT,GAAgD,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,cAAgB,EAC5BC,oBAAS,GADmB,mBACnDC,EADmD,KAC1CC,EAD0C,KAWtDC,EAAaN,EAAO,EACxB,OACI,sBAAKO,GAAG,YAAYC,UAAS,mBAAcR,GAA3C,UACI,sBAAMO,GAAG,SAAT,SAAmBD,IACnB,qBAAIG,MAAO,CAACC,gBAAiBN,EAAU,aAAe,OAAtD,UACI,sBAAKG,GAAG,WAAR,UACI,sBAAMA,GAAE,cAASP,GAAQS,MAAO,CAACL,QAAS,QAA1C,oBACA,sBAAMG,GAAG,OAAT,SAAiBN,OAErB,sBAAKM,GAAG,WAAWE,MAAO,CAACL,QAASA,EAAU,SAAW,QAAzD,UACI,uBAAOO,KAAK,SAASC,MAAM,SAASL,GAAG,aAAaM,QAASX,IAC7D,uBAAOS,KAAK,SAASC,MAAM,OAAOL,GAAG,aAAaM,QAAS,kBAnBvEC,SAASC,eAAT,cAA+Bf,IAAQS,MAAQ,kBAC/CK,SAASE,cAAT,oBAAoChB,IAAQS,MAAMQ,UAAY,YAC9DH,SAASE,cAAT,oBAAoChB,IAAQS,MAAMS,WAAa,qBAC/DC,YAAW,WACPL,SAASE,cAAT,oBAAoChB,IAAQS,MAAMQ,UAAY,YAC9DZ,GAAW,KACZ,iB,MCLI,SAASe,IAAO,IAAD,EACGjB,qBADH,mBACnBkB,EADmB,KACPC,EADO,KAEpBC,EAAWC,mBAFS,EAGArB,mBAAS,IAHT,mBAGnBsB,EAHmB,KAGZC,EAHY,KAKtBC,EAAgBF,EAAMG,OACpBC,EAAa,WACf,GAA+B,KAA3BN,EAASO,QAAQlB,MACjBmB,MAAM,iCACH,CACH,IAAMC,EAAS,CACXzB,GAAIoB,EACJM,KAAMV,EAASO,QAAQlB,OAE3Ba,EAAMS,KAAKF,GACXN,EAASD,GACTU,QAAQC,IAAIX,GACZF,EAASO,QAAQlB,MAAQ,GACzByB,MAGFA,EAAY,WACdf,EAAOG,EAAMa,KAAI,SAACrC,GAAD,OAAU,cAACF,EAAD,CAAwBE,KAAMA,EAAKgC,KAAMjC,KAAMC,EAAKM,GAAIL,cAAe,kBAAMA,EAAcD,EAAKM,MAAjFN,EAAKM,SAE7CL,EAAgB,SAACqC,UACZd,EAAMc,GACbF,KAUJ,OACI,qCACI,2CACA,sBAAK7B,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAO6B,YAAY,YAAYC,IAAKlB,EAAUhB,GAAG,cAAcmC,UAZrE,SAACC,GACD,UAAVA,EAAEJ,KACFV,KAUqGe,WAAS,IAC1G,uBAAOjC,KAAK,SAASC,MAAM,WAAWL,GAAG,SAASM,QAASgB,OAE/D,qBAAKtB,GAAG,eAAR,SACI,uBAAOI,KAAK,SAASC,MAAM,iBAAiBL,GAAG,OAAOM,QAX7C,WACjBkB,MAAM,oBAAD,OAAqBN,EAAMG,OAA3B,2CAYD,6BACKP,OCjDjBwB,IAASC,OACL,cAAC1B,EAAD,IACAN,SAASC,eAAe,W","file":"static/js/main.6ae84fea.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nexport default function ItemToDo({keyi, item, removeElement}) {\r\n    const [display, setDisplay] = useState(true)\r\n    const changeElement = () => {\r\n        document.getElementById(`stop${keyi}`).style = \"display: inline\"\r\n        document.querySelector(`.liElement${keyi}`).style.transform = \"scaleX(0)\"\r\n        document.querySelector(`.liElement${keyi}`).style.transition = \"transform .5s\"\r\n        setTimeout(() => {\r\n            document.querySelector(`.liElement${keyi}`).style.transform = \"scaleX(1)\"\r\n            setDisplay(false)\r\n        }, 500)\r\n    }\r\n    let priorityID = keyi + 1\r\n    return (\r\n        <div id=\"liElement\" className={`liElement${keyi}`}>\r\n            <span id=\"itemID\">{priorityID}</span>\r\n            <li style={{backgroundColor: display ? \"lightgreen\" : \"red\"}}>\r\n                <div id=\"elements\">\r\n                    <span id={`stop${keyi}`} style={{display: \"none\"}}>&#9989;</span>\r\n                    <span id=\"text\">{item}</span>\r\n                </div>\r\n                <div id=\"elements\" style={{display: display ? \"inline\" : \"none\"}}>\r\n                    <input type=\"button\" value=\"Delete\" id=\"itemButton\" onClick={removeElement} />\r\n                    <input type=\"button\" value=\"Done\" id=\"itemButton\" onClick={() => changeElement()} />\r\n                </div>\r\n            </li>\r\n        </div>\r\n    )\r\n}","import React, { useState, useRef } from \"react\"\r\nimport ItemToDo from \"./ItemToDo\"\r\n//import useLocalStorage from \"./hooks/useLocalStorage\"\r\nimport \"./style.scss\"\r\n\r\n\r\nexport default function App() {\r\n    const [currentMap, setMap] = useState()\r\n    const inputRef = useRef()\r\n    const [items, setItems] = useState([])\r\n\r\n    let initialItemID = items.length\r\n    const addElement = () => {\r\n        if (inputRef.current.value === \"\") {\r\n            alert(\"Please enter something!!!\")\r\n        } else {\r\n            const newObj = {\r\n                id: initialItemID,\r\n                text: inputRef.current.value\r\n            }\r\n            items.push(newObj)\r\n            setItems(items)\r\n            console.log(items)\r\n            inputRef.current.value = \"\"\r\n            updateMap()\r\n        }\r\n    }\r\n    const updateMap = () => {\r\n        setMap(items.map((item) => <ItemToDo key={item.id} item={item.text} keyi={item.id} removeElement={() => removeElement(item.id)} />))\r\n    }\r\n    const removeElement = (key) => {\r\n        delete items[key]\r\n        updateMap()\r\n    }\r\n    const handleKey = (e) => {\r\n        if (e.key === 'Enter') {\r\n            addElement()\r\n        }\r\n    }\r\n    const showElements = () => {\r\n        alert(`You have created ${items.length} items in total. (deleted + done)`)\r\n    }\r\n    return (\r\n        <>\r\n            <h1>ToDo List</h1>\r\n            <div className=\"elements\">\r\n                <input type=\"text\" placeholder=\"Name here\" ref={inputRef} id=\"elementName\" onKeyDown={handleKey} autoFocus />\r\n                <input type=\"button\" value=\"Add Item\" id=\"submit\" onClick={addElement} />\r\n            </div>\r\n            <div id=\"showElements\">\r\n                <input type=\"button\" value=\"Check Elements\" id=\"show\" onClick={showElements} />\r\n            </div>\r\n            <ul>\r\n                {currentMap}\r\n            </ul>\r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}